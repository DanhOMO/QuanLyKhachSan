/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.quanlykhachsan.view;

import java.awt.Component;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Date;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.quanlykhachsan.dao.HoaDon_DAO;
import com.quanlykhachsan.dao.KhachHang_DAO;
import com.quanlykhachsan.dao.KhuVuc_DAO;
import com.quanlykhachsan.dao.LoaiPhong_DAO;
import com.quanlykhachsan.dao.Phong_DAO;
import com.quanlykhachsan.entity.DichVu;
import com.quanlykhachsan.entity.HoaDon;
import com.quanlykhachsan.entity.KhachHang;
import com.quanlykhachsan.entity.KhuVuc;
import com.quanlykhachsan.enum_Class.TrangThaiPhong;
import com.quanlykhachsan.entity.LoaiPhong;
import com.quanlykhachsan.entity.Phong;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author liemh
 */
public class DatPhong_GUI extends javax.swing.JPanel {
	private Phong_DAO p_dao;
	private HoaDon_DAO hd_dao;
	private KhuVuc_DAO kv_dao;
	private LoaiPhong_DAO lp_dao;
	private KhachHang_DAO kh_dao = new KhachHang_DAO();
	private List<Phong> dsLoc = new ArrayList<Phong>();
        private List<Phong> dsPhongChon = new ArrayList<Phong>();
	
	/**
	 * Creates new form DatPhong
	 */
	public DatPhong_GUI() {
		initComponents();	
		p_dao = new Phong_DAO();
		hd_dao = new HoaDon_DAO();
		kv_dao = new KhuVuc_DAO();
		lp_dao = new LoaiPhong_DAO();
		jDateChooserCheckIn.setDate(java.sql.Date.valueOf(LocalDate.now()));
		jDateChooserCheckOut.setDate(Date.valueOf(LocalDate.now().plusDays(1)));
		radioNgay.setSelected(true);
		loadComboxLoaiPhong();
		loadComboxKhuVuc();
		loadComboxGioCheckIn();
		spinnerSL.setValue(1);
//		p_dao.docTuBang();
//		dsLoc = p_dao.getList();
//		showAllRooms(dsLoc);
	}

	private void loadComboxGioCheckIn() {
	   if(LocalDateTime.now().getHour() == 23) {
		   jComboBoxGioCheckIn.setSelectedIndex(0);
	   }
	   else {
		   jComboBoxGioCheckIn.setSelectedIndex(LocalDateTime.now().getHour()+1);
	   }
	    
	}


	private void loadComboxKhuVuc() {
		jComboBoxKhuVuc.removeAllItems();
		jComboBoxKhuVuc.addItem("Tất cả");
		ArrayList<KhuVuc> dskv = new ArrayList<KhuVuc>();
		dskv = kv_dao.getDsKhuVuc();
		dskv.stream().forEach(x -> {
			jComboBoxKhuVuc.addItem(x.getTenKhuVuc());
		});
	}

	private void loadComboxLoaiPhong() {
		jComboBoxLoaiPhong.removeAllItems();
		jComboBoxLoaiPhong.addItem("Tất cả");
		List<LoaiPhong> dslp = new ArrayList<>();
		lp_dao.docTuBang();
		dslp = lp_dao.getList();

		dslp.stream().forEach(x -> {
			jComboBoxLoaiPhong.addItem(x.getTenLoaiPhong());
		});
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxKhuVuc = new javax.swing.JComboBox<>();
        jComboBoxLoaiPhong = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldTimKiem = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jButtonPhongDaCoc = new javax.swing.JButton();
        jButtonPhongTrong = new javax.swing.JButton();
        jButtonPhongDaDat = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        checkOut = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jDateChooserCheckIn = new com.toedter.calendar.JDateChooser();
        jDateChooserCheckOut = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        spinnerSL = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        radioNgay = new javax.swing.JRadioButton();
        radioGio = new javax.swing.JRadioButton();
        jComboBoxGioCheckIn = new javax.swing.JComboBox<>();
        jPanel7 = new javax.swing.JPanel();
        jButtonLamMoi = new javax.swing.JButton();
        btnThanhToan = new javax.swing.JButton();
        jButtonDatPhong = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();

        setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        setPreferredSize(new java.awt.Dimension(1220, 727));

        jPanel1.setMinimumSize(new java.awt.Dimension(1220, 868));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Tra cứu phòng"));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Khu vực:");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Loại phòng:");

        jComboBoxKhuVuc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxKhuVuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxKhuVuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxKhuVuc(evt);
            }
        });

        jComboBoxLoaiPhong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxLoaiPhong.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxLoaiPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLoaiPhong(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Tìm kiếm:");

        jTextFieldTimKiem.setText("Nhập mã phòng"); // NOI18N
        jTextFieldTimKiem.setToolTipText("phòng");
        jTextFieldTimKiem.setPreferredSize(new java.awt.Dimension(150, 30));
        jTextFieldTimKiem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTimKiemFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldTimKiemFocusLost(evt);
            }
        });
        jTextFieldTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxKhuVuc, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxLoaiPhong, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(16, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jComboBoxKhuVuc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxLoaiPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Trạng Thái Phòng"));

        jButtonPhongDaCoc.setBackground(new java.awt.Color(48, 206, 235));
        jButtonPhongDaCoc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonPhongDaCoc.setText("Phòng Đã Cọc");
        jButtonPhongDaCoc.setMinimumSize(new java.awt.Dimension(130, 30));
        jButtonPhongDaCoc.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonPhongDaCoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPhongDaCocActionPerformed(evt);
            }
        });

        jButtonPhongTrong.setBackground(new java.awt.Color(65, 217, 158));
        jButtonPhongTrong.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonPhongTrong.setText("Phòng Trống");
        jButtonPhongTrong.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonPhongTrong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPhongTrong(evt);
            }
        });

        jButtonPhongDaDat.setBackground(new java.awt.Color(125, 125, 125));
        jButtonPhongDaDat.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonPhongDaDat.setText("Phòng Đã Đặt");
        jButtonPhongDaDat.setMinimumSize(new java.awt.Dimension(130, 30));
        jButtonPhongDaDat.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonPhongDaDat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPhongDaDat(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonPhongDaDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPhongTrong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPhongDaCoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonPhongDaCoc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPhongTrong, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonPhongDaDat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(15, 15, 15))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông Tin Đặt Phòng"));

        checkOut.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        checkOut.setText("Checkout");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel5.setText("Checkin");

        jDateChooserCheckIn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserCheckInPropertyChange(evt);
            }
        });

        jDateChooserCheckOut.setMinimumSize(new java.awt.Dimension(88, 22));
        jDateChooserCheckOut.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooserCheckOutPropertyChange(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Số lượng khách");

        spinnerSL.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spinnerSLStateChanged(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setText("Hình thức");

        buttonGroup1.add(radioNgay);
        radioNgay.setText("Ngày");

        buttonGroup1.add(radioGio);
        radioGio.setText("Giờ");
        radioGio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioGioActionPerformed(evt);
            }
        });

        jComboBoxGioCheckIn.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0 giờ", "1 giờ ", "2 giờ", "3 giờ", "4 giờ", "5 giờ", "6 giờ", "7 giờ", "8 giờ", "9 giờ", "10 giờ", "11 giờ", "12 giờ", "13 giờ", "14 giờ", "15 giờ", "16 giờ", "17 giờ", "18 giờ", "19 giờ", "20 giờ", "21 giờ", "22 giờ", "23 giờ" }));
        jComboBoxGioCheckIn.setMinimumSize(new java.awt.Dimension(88, 22));
        jComboBoxGioCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGioCheckInActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(checkOut))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxGioCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jDateChooserCheckIn, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                            .addComponent(jDateChooserCheckOut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 146, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(radioNgay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addComponent(radioGio)
                                .addGap(43, 43, 43))
                            .addComponent(spinnerSL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jComboBoxGioCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooserCheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkOut)
                    .addComponent(jDateChooserCheckOut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(spinnerSL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(radioNgay)
                    .addComponent(radioGio))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Thao tác "));

        jButtonLamMoi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonLamMoi.setText("Refresh");
        jButtonLamMoi.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLamMoiActionPerformed(evt);
            }
        });

        btnThanhToan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.setPreferredSize(new java.awt.Dimension(130, 30));
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanjButtonPhongTrong(evt);
            }
        });

        jButtonDatPhong.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jButtonDatPhong.setText("Đặt ");
        jButtonDatPhong.setPreferredSize(new java.awt.Dimension(130, 30));
        jButtonDatPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDatPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jButtonLamMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh sách phòng"));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1301, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 775, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel3);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1226, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 135, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 724, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLamMoiActionPerformed
    	hd_dao.capNhatHuyPhong();
    	jComboBoxKhuVuc.setSelectedIndex(0);
		jComboBoxLoaiPhong.setSelectedIndex(0);
		spinnerSL.setValue(1);
		jDateChooserCheckIn.setDate(java.sql.Date.valueOf(LocalDate.now()));
		jDateChooserCheckOut.setDate(Date.valueOf(LocalDate.now().plusDays(1)));
		p_dao.docTuBang();
		dsLoc = p_dao.getList();
                dsPhongChon = dsLoc.stream()
        		.filter(x->x.getTrangThai().equals(TrangThaiPhong.DA_CHON))
        		.toList();

		locDuLieu();
		showAllRooms(dsLoc);
    }//GEN-LAST:event_jButtonLamMoiActionPerformed

    private void btnThanhToanjButtonPhongTrong(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanjButtonPhongTrong
    	JFrame gd = new JFrame();
		gd.add(new ThanhToan_GUI());
		gd.setVisible(true);
		gd.setSize(810, 610);
                gd.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnThanhToanjButtonPhongTrong

    private void jButtonPhongDaCocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPhongDaCocActionPerformed
    	locDuLieu();
    	List<com.quanlykhachsan.entity.Phong> dsPhong = new ArrayList<Phong>();
		dsPhong = dsLoc.stream().filter(x -> x.getTrangThai() == TrangThaiPhong.DA_COC).toList();
		showAllRooms(dsPhong);
    }//GEN-LAST:event_jButtonPhongDaCocActionPerformed

    private void jComboBoxLoaiPhong(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLoaiPhong
    	locDuLieu();
    	showAllRooms(dsLoc);
    }//GEN-LAST:event_jComboBoxLoaiPhong

    private void locTheoKhuVuc() {
    	int i = jComboBoxKhuVuc.getSelectedIndex();
		if (i == 0) {
			return;
		} else {
			List<KhuVuc> dskv = kv_dao.getDsKhuVuc();
			if (i > 0 && i <= dskv.size()) {
				KhuVuc kv = dskv.stream()
						.filter(x -> x.getTenKhuVuc().equals(jComboBoxKhuVuc.getSelectedItem().toString())).findFirst()
						.orElse(null);
				p_dao.timPhongTheoKhuVuc(kv);
				dsLoc = p_dao.getList();
			}
		}
		
	}

	private void jComboBoxKhuVuc(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxKhuVuc
    	locDuLieu();
    	showAllRooms(dsLoc);
    }//GEN-LAST:event_jComboBoxKhuVuc

    private void locTheoLoaiPhong() {
    	int i = jComboBoxLoaiPhong.getSelectedIndex();
		if (i == 0) {
			return;
		} else {
			List<LoaiPhong> dslp = lp_dao.getList();
			if (i > 0 && i <= dslp.size()) {
				LoaiPhong lp = dslp.stream()
						.filter(x -> x.getTenLoaiPhong().equals(jComboBoxLoaiPhong.getSelectedItem().toString()))
						.findFirst().orElse(null);
				p_dao.timPhongTheoLoaiPhong(lp.getMaLoaiPhong());
				dsLoc = p_dao.getList();
			}
		}	
	}

	private void jButtonPhongDaDat(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPhongDaDat
		locDuLieu();
    	List<com.quanlykhachsan.entity.Phong> dsPhong = new ArrayList<Phong>();
		dsPhong = dsLoc.stream().filter(x -> x.getTrangThai() == TrangThaiPhong.DA_DAT).toList();
		showAllRooms(dsPhong);
    }//GEN-LAST:event_jButtonPhongDaDat

    private void jButtonPhongTrong(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPhongTrong
    	locDuLieu();
    	List<com.quanlykhachsan.entity.Phong> dsPhong = new ArrayList<Phong>();
		dsPhong = dsLoc.stream().filter(x -> x.getTrangThai() == TrangThaiPhong.TRONG).toList();
		showAllRooms(dsPhong);
    }//GEN-LAST:event_jButtonPhongTrong

    private void locDuLieu() {
	if(dsPhongChon.isEmpty()) {
    		dsPhongChon = dsLoc.stream()
        		.filter(x->x.getTrangThai().equals(TrangThaiPhong.DA_CHON))
        		.toList();
    	}
        p_dao.docTuBang();
    	dsLoc = p_dao.getList();
    	locTheoLoaiPhong();
    	locTheoKhuVuc();
    	locTheoSoLuongKhach();
    	locTheoCheckInCheckOut();
	}

	private void locTheoCheckInCheckOut() {	
		java.util.Date checkIn = jDateChooserCheckIn.getDate();
		if(checkIn==null) {
			return;
		}
		java.sql.Date checkInSqlDate = new java.sql.Date(checkIn.getTime());
		java.util.Date checkOut = jDateChooserCheckOut.getDate();
		if(checkOut==null) {
			return;
		}
		java.sql.Date checkOutSqlDate = new java.sql.Date(checkOut.getTime());
		List<Phong> dsPhongTrong = p_dao.TimPhongTheoThoiGianCheckInCheckOut1(checkInSqlDate,checkOutSqlDate);
		List<Phong> dsPhongDaDat = p_dao.TimPhongTheoThoiGianCheckInCheckOut2(checkInSqlDate,checkOutSqlDate);
		List<Phong> dsPhongDaCoc = p_dao.TimPhongTheoThoiGianCheckInCheckOut3(checkInSqlDate,checkOutSqlDate);
		dsLoc.stream().forEach(x->{
			if(dsPhongTrong.contains(x)) {
				x.setTrangThai(TrangThaiPhong.TRONG);
			}
			if(dsPhongDaDat.contains(x)) {
				x.setTrangThai(TrangThaiPhong.DA_DAT);
			}else if(dsPhongDaCoc.contains(x)) {
				x.setTrangThai(TrangThaiPhong.DA_COC);
			}
		});
	}

	private void locTheoSoLuongKhach() {
		int soLuongKhach = (Integer) spinnerSL.getValue();
		int soLuongNguoiMaxPhong = lp_dao.timPhongSoLuongNguoiLonNhat();
		if(soLuongKhach > soLuongNguoiMaxPhong) {
			soLuongKhach = 	soLuongNguoiMaxPhong;
		}
		List<Phong> dsPhong = p_dao.timPhongTheoSoLuongNguoi(soLuongKhach);
//		List<Phong> temp = dsLoc.stream()
//		           .filter(dsPhong::contains) // lọc những phòng có trong dsPhong
//		           .collect(Collectors.toList()); // thu thập các phần tử chung vào danh sách
//		dsLoc = temp;
		
		if(dsPhong.isEmpty()) {
			for(int i = 1; i<soLuongNguoiMaxPhong;i++) {
				dsPhong = p_dao.timPhongTheoSoLuongNguoi(soLuongKhach+i);
				if(!dsPhong.isEmpty()) {
					break;
				}
			}
		}
		
		
		Map<Boolean, List<Phong>> partitioned = dsLoc.stream()
	            .collect(Collectors.partitioningBy(dsPhong::contains));

	        // Lấy danh sách các phần tử chung
	        List<Phong> phongTrung = partitioned.get(true);

	        // Lấy danh sách các phần tử không chung
	        List<Phong> phongKhongTrung = partitioned.get(false);
	        phongTrung.addAll(phongKhongTrung);
	        dsLoc = phongTrung;
	}

	private void radioGioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioGioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioGioActionPerformed

    private void spinnerSLStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spinnerSLStateChanged
    	int soLuongKhach = (Integer) spinnerSL.getValue();
    	if(soLuongKhach<=0) {
    		JOptionPane.showMessageDialog(null, "Số lượng khách phải > 0", "Lỗi",
					JOptionPane.ERROR_MESSAGE);
    		spinnerSL.setValue(1);
    		return;
    	}
    	if(soLuongKhach > p_dao.tongSoLuongNguoi(dsLoc)) {
    		JOptionPane.showMessageDialog(null, "NGU", "Lỗi",
					JOptionPane.ERROR_MESSAGE);
    		spinnerSL.setValue(1);
    		return;
		}
    	
    	locDuLieu();
    	showAllRooms(dsLoc);
    }//GEN-LAST:event_spinnerSLStateChanged

	private void jDateChooserCheckInPropertyChange(java.beans.PropertyChangeEvent evt) {// GEN-FIRST:event_jDateChooserCheckInPropertyChange
		java.util.Date checkInDate = jDateChooserCheckIn.getDate();
		LocalDate today = LocalDate.now(); 
		if(checkInDate == null) {
			return;
		}
		LocalDate checkInLocalDate = checkInDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
		// Kiểm tra nếu checkInLocalDate là sau hoặc bằng today
		if (checkInLocalDate.isBefore(today)) {
			JOptionPane.showMessageDialog(null, "Ngày check-in phải sau hoặc bằng ngày hiện tại.", "Lỗi",
					JOptionPane.ERROR_MESSAGE);
			java.util.Date t = Date.from(today.atStartOfDay(ZoneId.systemDefault()).toInstant());
			jDateChooserCheckIn.setDate(t);

		} else {
			java.sql.Date checkInSqlDate = new java.sql.Date(checkInDate.getTime());
			long oneDayInMillis = 24 * 60 * 60 * 1000; // Số mili giây trong 1 ngày
			java.sql.Date checkOutSqlDate = new java.sql.Date(checkInSqlDate.getTime() + oneDayInMillis);

			// Thiết lập ngày cho jDateChooserCheckOut
			jDateChooserCheckOut.setDate(checkOutSqlDate);
			locDuLieu();
			showAllRooms(dsLoc);
		}

		
	}// GEN-LAST:event_jDateChooserCheckInPropertyChange

    private void jDateChooserCheckOutPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserCheckOutPropertyChange
    	java.util.Date checkOutDate = jDateChooserCheckOut.getDate();
    	if(checkOutDate == null) {
    		return;
    	}
    	if(kiemTraNgayCheckOut()) {
    		locDuLieu();
    		showAllRooms(dsLoc);
    	}else {
    		JOptionPane.showMessageDialog(null, "Ngày check-out phải sau hoặc bằng ngày check-in.", "Lỗi", JOptionPane.ERROR_MESSAGE);
    		java.util.Date checkIn = jDateChooserCheckIn.getDate();
    		LocalDate checkInLocalDate = checkIn.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    		LocalDate checkOutLocalDate = checkInLocalDate.plusDays(1);
    		java.util.Date checkOut = Date.from(checkOutLocalDate.atStartOfDay(ZoneId.systemDefault()).toInstant());
    		jDateChooserCheckOut.setDate(checkOut);
    	}
    	
    }//GEN-LAST:event_jDateChooserCheckOutPropertyChange
    
    public boolean kiemTraNgayCheckOut() {
        java.util.Date checkInDate = jDateChooserCheckIn.getDate();
        java.util.Date checkOutDate = jDateChooserCheckOut.getDate();

        if (checkOutDate != null) {
            LocalDate checkInLocalDate = checkInDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            LocalDate checkOutLocalDate = checkOutDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            return !checkOutLocalDate.isBefore(checkInLocalDate); // Trả về true nếu hợp lệ, false nếu không
        }
        return false; // Trả về false nếu ngày không được chọn
    }
    
    private void jButtonDatPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDatPhongActionPerformed
    	if(jDateChooserCheckIn.getDate()==null) {
    		JOptionPane.showMessageDialog(null, "Vui lòng chọn checkIn", "Thông báo", JOptionPane.WARNING_MESSAGE);
    		return;
    	}
    	
    	if(kiemTraNgayCheckOut()) {
	    	dsPhongChon = dsLoc.stream()
	        		.filter(x->x.getTrangThai().equals(TrangThaiPhong.DA_CHON))
	        		.toList();
                List<Phong> temp = dsPhongChon.stream()
        		    .map(phong -> {
        		        phong.setTrangThai(TrangThaiPhong.TRONG); // Cập nhật trạng thái
        		        return phong; // Trả về phòng đã cập nhật
        		    })
        		    .collect(Collectors.toList()); // Thu thập kết quả vào danh sách
        	int soLuongKhach = (Integer) spinnerSL.getValue();
        	System.err.println(p_dao.tongSoLuongNguoi(temp));
        	if(p_dao.tongSoLuongNguoi(temp)<soLuongKhach) {
        		JOptionPane.showMessageDialog(null, "Số lượng người phòng chọn < Số Khách", "Thông báo", JOptionPane.WARNING_MESSAGE);
        		showAllRooms(dsLoc);
        		return;
        	}
	    	if(dsPhongChon.isEmpty()||dsPhongChon == null) {
	    		JOptionPane.showMessageDialog(null, "Chưa chọn Phòng để đặt", "Thông báo", JOptionPane.WARNING_MESSAGE);
	    		return;
	    	}
	    	try {
				JFrame jframe = new JFrame();
				int gioCheckIn = jComboBoxGioCheckIn.getSelectedIndex();
				java.util.Date checkIn = jDateChooserCheckIn.getDate();
				java.util.Date checkOut = jDateChooserCheckOut.getDate();
				boolean hinhThucThue;//true = ngay, false = gio
				if(radioNgay.isSelected()) {
					hinhThucThue = true;
				}else
					hinhThucThue = false;
				ThongTinDatPhong ttdp = new ThongTinDatPhong(dsPhongChon, jframe,gioCheckIn,checkIn,checkOut,hinhThucThue,soLuongKhach);
				jframe.add(ttdp);
				jframe.setExtendedState(JFrame.MAXIMIZED_BOTH);
				jframe.setVisible(true);
			} catch (Exception e) {
				e.printStackTrace();
				// Có thể thêm thông báo cho người dùng về lỗi
			}
    	}else {
    		JOptionPane.showMessageDialog(null, "Vui lòng chọn ngày check-out.", "Thông báo", JOptionPane.WARNING_MESSAGE);
    		java.util.Date checkIn = jDateChooserCheckIn.getDate();
    		LocalDate checkInLocalDate = checkIn.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
    		LocalDate checkOutLocalDate = checkInLocalDate.plusDays(1);
    		java.util.Date checkOut = Date.from(checkOutLocalDate.atStartOfDay(ZoneId.systemDefault()).toInstant());
    		jDateChooserCheckOut.setDate(checkOut);
    	}
    	
    }//GEN-LAST:event_jButtonDatPhongActionPerformed

    private void jComboBoxGioCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGioCheckInActionPerformed
    	if (!jDateChooserCheckIn.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate().equals(LocalDate.now())) {
    	    return;
    	}
    	
    	int selectedHour = jComboBoxGioCheckIn.getSelectedIndex(); // Giả sử các giờ được liệt kê từ 0 đến 23
        int currentHour = LocalDateTime.now().getHour();
        
        if (selectedHour < currentHour + 1) {
            // Hiển thị thông báo lỗi
            JOptionPane.showMessageDialog(this, "Giờ check-in không thể nhỏ hơn giờ hiện tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            if(LocalDateTime.now().getHour() == 23) {
     		   jComboBoxGioCheckIn.setSelectedIndex(0);
     	   	}
     	   	else {
     		   jComboBoxGioCheckIn.setSelectedIndex(LocalDateTime.now().getHour()+1);
     	   	}
        }
        
    }//GEN-LAST:event_jComboBoxGioCheckInActionPerformed


	private void jTextFieldTimKiemKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:event_jTextFieldTimKiemKeyReleased
		String maPhong = jTextFieldTimKiem.getText();
		List<Phong> dsP = new ArrayList<Phong>();
		if (maPhong.length() == 4) {
			p_dao.setList(dsLoc);
			Phong p = p_dao.timTheoMa(maPhong);
			if (p != null) {
				dsP.add(p);
				showAllRooms(dsP);
			}

		}
		showAllRooms(dsP);

	}// GEN-LAST:event_jTextFieldTimKiemKeyReleased

	private void jTextFieldTimKiemFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldTimKiemFocusGained
		jTextFieldTimKiem.setText("");
	}// GEN-LAST:event_jTextFieldTimKiemFocusGained

	private void jTextFieldTimKiemFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:event_jTextFieldTimKiemFocusLost
		jTextFieldTimKiem.setText("");
		jTextFieldTimKiem.setText("Nhập mã phòng");
		showAllRooms(dsLoc);
	}// GEN-LAST:event_jTextFieldTimKiemFocusLost

	private void showAllRooms(List<com.quanlykhachsan.entity.Phong> dsPhong) {
		jPanel3.removeAll();
		int tongPhong = dsPhong.size();
		int panelTemp = 20 - tongPhong;
		java.util.Date checkIn = jDateChooserCheckIn.getDate();
		if(checkIn==null) {
			return;
		}
		
		java.sql.Date checkInSqlDate = new java.sql.Date(checkIn.getTime());
		java.util.Date checkOut = jDateChooserCheckOut.getDate();
		if(checkOut==null) {
			return;
		}
		java.sql.Date checkOutSqlDate = new java.sql.Date(checkOut.getTime());
		
		// Đặt layout cho jPanel3 để các phòng sắp xếp dễ nhìn
		jPanel3.setLayout(new java.awt.GridLayout(0, 4, 10, 10));
		for (com.quanlykhachsan.entity.Phong phong : dsPhong) {
			if (phong.getTrangThai() == TrangThaiPhong.TRONG) {
				PhongTrong_GUI phongTrong = new PhongTrong_GUI(phong);
				phongTrong.setjLabeltenPhong(phong.getTenPhong() + '-' + phong.getKhuVuc().getMaKhuVuc());
				phongTrong.setPreferredSize(new java.awt.Dimension(150, 150)); // Kích thước
				// của mỗi panel phòng
				jPanel3.add(phongTrong); 
			} else if (phong.getTrangThai() == TrangThaiPhong.DA_DAT) {
				PhongDaDat_GUI phongDaDat = null;
				List<HoaDon> dshd = new ArrayList<HoaDon>();
				dshd = hd_dao.timTheoCheckInCheckOut(phong.getMaPhong(), checkInSqlDate, checkOutSqlDate);
				HoaDon hd = null;
				if(dshd.size() != 0) {
					hd = dshd.get(0);
					//hd = dshd.get(dshd.size() - 1);//getLast
					phongDaDat = new PhongDaDat_GUI(phong,hd);
					phongDaDat.setjLabelTenPhong(phong.getTenPhong() + '-' + phong.getKhuVuc().getMaKhuVuc());
					KhachHang kh = kh_dao.timTheoMa(hd.getKhachHang().getMaKhachHang());
					phongDaDat.setjLabelTenKhachHang(kh.getTenKhachHang());
					phongDaDat.setjLabelCheckIn(hd.getCheckIn().toString());
					phongDaDat.setjLabelCheckOut(hd.getCheckOut().toString());
					phongDaDat.setPreferredSize(new java.awt.Dimension(150, 150)); // Kích thước
				}else {
					//hd = dshd.get(dshd.size() - 1);//getLast
					
				}
				
				
				// của mỗi panel phòng
				jPanel3.add(phongDaDat);
			}
			else if (phong.getTrangThai() == TrangThaiPhong.DA_COC) {
				PhongDaDatTruoc_GUI phongDaDat = new PhongDaDatTruoc_GUI(phong);
				phongDaDat.setjLabelTenPhong(phong.getTenPhong() + '-' + phong.getKhuVuc().getMaKhuVuc());		
				List<HoaDon> dshd = new ArrayList<HoaDon>();
				dshd = hd_dao.timTheoCheckIn(phong.getMaPhong(),checkInSqlDate);
				HoaDon hd = null;
				if(dshd.size()!=0) {
					if(dshd.size() == 1) {
						hd = dshd.get(0);
					}else {
						hd = dshd.get(0);
						//hd = dshd.get(dshd.size() - 1);//getLast
					}
								
					KhachHang kh = kh_dao.timTheoMa(hd.getKhachHang().getMaKhachHang());
					if(kh == null)
						phongDaDat.setjLabelTenKhachHang("");
	                                else phongDaDat.setjLabelTenKhachHang(kh.getTenKhachHang());
					phongDaDat.setjLabelCheckIn(hd.getCheckIn().toString());
					phongDaDat.setjLabelCheckOut(hd.getCheckOut().toString());
					phongDaDat.setPreferredSize(new java.awt.Dimension(150, 150)); // Kích thước
					// của mỗi panel phòng
					jPanel3.add(phongDaDat);
				}
				
			}
			

		}

		// Cập nhật lại jPanel3
		jPanel3.revalidate();
		jPanel3.repaint();
		for (int i = 0; i < panelTemp; i++) {
			JPanel temp = new JPanel();
			temp.setPreferredSize(new java.awt.Dimension(150, 150));
			jPanel3.add(temp);
		}
	}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThanhToan;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel checkOut;
    private javax.swing.JButton jButtonDatPhong;
    private javax.swing.JButton jButtonLamMoi;
    private javax.swing.JButton jButtonPhongDaCoc;
    private javax.swing.JButton jButtonPhongDaDat;
    private javax.swing.JButton jButtonPhongTrong;
    private javax.swing.JComboBox<String> jComboBoxGioCheckIn;
    private javax.swing.JComboBox<String> jComboBoxKhuVuc;
    private javax.swing.JComboBox<String> jComboBoxLoaiPhong;
    private com.toedter.calendar.JDateChooser jDateChooserCheckIn;
    private com.toedter.calendar.JDateChooser jDateChooserCheckOut;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextFieldTimKiem;
    private javax.swing.JRadioButton radioGio;
    private javax.swing.JRadioButton radioNgay;
    private javax.swing.JSpinner spinnerSL;
    // End of variables declaration//GEN-END:variables
}
