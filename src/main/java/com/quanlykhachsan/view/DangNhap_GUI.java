/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.quanlykhachsan.view;

import com.formdev.flatlaf.FlatLightLaf;
import com.quanlykhachsan.dao.test;
import com.quanlykhachsan.main.Main;
import com.quanlykhachsan.model.ConnectDB;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;

/**
 *
 * @author liemh
 */
public class DangNhap_GUI extends javax.swing.JFrame {

    /**
     * Creates new form DangNhap_GUI
     */
    private Color color1; // Màu đầu tiên
    private Color color2; // Màu thứ hai
    
    public DangNhap_GUI(Color color1, Color color2) {
        this.color1 = color1;
        this.color2 = color2;
    }
    protected void paintComponent(Graphics g) {
        
        Graphics2D g2d = (Graphics2D) g;
        
        // Tạo GradientPaint từ màu color1 đến color2
        GradientPaint gradient = new GradientPaint(0, 0, color1, getWidth(), getHeight(), color2);
        g2d.setPaint(gradient);
        
        // Vẽ hình chữ nhật phủ toàn bộ JPanel
        g2d.fillRect(0, 0, getWidth(), getHeight());
    }
    
    public DangNhap_GUI() {
        initComponents();
        setLocationRelativeTo(null);
        updateDefaultPassword();
        txtTenDangNhap.addKeyListener(new KeyAdapter() {
    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            btnDangNhapActionPerformed(new ActionEvent(btnDangNhap, ActionEvent.ACTION_PERFORMED, null));
        }
    }
});

txtMatKhau.addKeyListener(new KeyAdapter() {
    @Override
    public void keyPressed(KeyEvent e) {
        if (e.getKeyCode() == KeyEvent.VK_ENTER) {
            btnDangNhapActionPerformed(new ActionEvent(btnDangNhap, ActionEvent.ACTION_PERFORMED, null));
        }
    }
});

    }
     private String hashPassword(String password) {
        try {
            MessageDigest digest = MessageDigest.getInstance("SHA-256");
            byte[] encodedHash = digest.digest(password.getBytes());
            StringBuilder hexString = new StringBuilder(2 * encodedHash.length);
            for (byte b : encodedHash) {
                String hex = Integer.toHexString(0xff & b);
                if (hex.length() == 1) hexString.append('0');
                hexString.append(hex);
            }
            return hexString.toString();
        } catch (NoSuchAlgorithmException e) {
            throw new RuntimeException("Lỗi khi mã hóa mật khẩu: " + e.getMessage());
        }
    }
    public void updateDefaultPassword() {
    String defaultPassword = txtMatKhau.getText();
    String hashedDefaultPassword = hashPassword(defaultPassword); // Mã hóa mật khẩu "123"
    
    try {
        ConnectDB.getInstance().connect();
        Connection con = ConnectDB.getInstance().getConnection();
        
        // Cập nhật tất cả tài khoản có mật khẩu "123" thành mật khẩu đã mã hóa
        String sql = "UPDATE TaiKhoan SET matKhau = ? WHERE matKhau = ?";
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, hashedDefaultPassword); // Mật khẩu mã hóa
        pstmt.setString(2, defaultPassword); // Điều kiện là mật khẩu hiện tại là "123"
        
        pstmt.executeUpdate();
       
        
    } catch (SQLException e) {
        e.printStackTrace();
    }
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTenDangNhap = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        checkRemember = new javax.swing.JCheckBox();
        jFoget = new javax.swing.JLabel();
        btnDangNhap = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 255));
        setPreferredSize(new java.awt.Dimension(500, 500));

        jPanel1.setBackground(new java.awt.Color(255, 204, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(300, 100));
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 400));

        jPanel3.setBackground(new java.awt.Color(255, 204, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(370, 100));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("LOGIN");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel1)
                .addContainerGap(151, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(36, 36, 36))
        );

        jPanel1.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 204, 255));
        jPanel4.setPreferredSize(new java.awt.Dimension(370, 330));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel3.setText("Tên đăng nhập");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel4.setText("Mật khẩu");

        txtMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMatKhauActionPerformed(evt);
            }
        });

        checkRemember.setText("Remember me");

        jFoget.setBackground(new java.awt.Color(255, 51, 51));
        jFoget.setForeground(new java.awt.Color(255, 0, 51));
        jFoget.setText("Forgot your password");
        jFoget.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jFogetMouseClicked(evt);
            }
        });

        btnDangNhap.setBackground(new java.awt.Color(102, 102, 102));
        btnDangNhap.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnDangNhap.setText("Đăng nhập");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 46, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(checkRemember)
                        .addGap(60, 60, 60)
                        .addComponent(jFoget))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(32, 32, 32)
                .addComponent(txtTenDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkRemember)
                    .addComponent(jFoget))
                .addGap(18, 18, 18)
                .addComponent(btnDangNhap)
                .addContainerGap(41, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMatKhauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMatKhauActionPerformed

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
         // Lấy thông tin người dùng từ các trường nhập
   // Lấy thông tin người dùng từ các trường nhập
    String user = txtTenDangNhap.getText();
    String pass = new String(txtMatKhau.getPassword()); // Lấy mật khẩu
    
    // Mã hóa mật khẩu
    String hashedPass = hashPassword(pass);
    updateDefaultPassword();
    System.out.print(hashedPass);
    try {
        // Kết nối đến cơ sở dữ liệu
        ConnectDB.getInstance().connect();
        Connection con = ConnectDB.getInstance().getConnection();
        
        // SQL để kiểm tra thông tin đăng nhập
        String sql = "SELECT * FROM TaiKhoan t JOIN NhanVien nv ON nv.maNhanVien = t.maNhanVien WHERE soDienThoai = ? AND matKhau = ?";
        PreparedStatement pstmt = con.prepareStatement(sql);
        pstmt.setString(1, user);
        pstmt.setString(2, hashedPass); // Sử dụng mật khẩu đã mã hóa

        ResultSet rs = pstmt.executeQuery();
        
        if (rs.next()) {
            JOptionPane.showMessageDialog(null, "Đăng nhập thành công!");
            updateTrangThai("DANG_HOAT_DONG", user);
            dispose();
            TrangChu_GUI gd = new TrangChu_GUI();

            try {
                UIManager.setLookAndFeel(new FlatLightLaf());
            } catch (Exception e) {
                System.err.println("Failed to initialize Look and Feel");
            }
            
            gd.setVisible(true);
            gd.setSize(1650, 800);
            gd.pack();
            gd.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    try {
                        updateTrangThai("KHONG_HOAT_DONG", user);
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                    System.exit(0);
                }
            });
        } else {
            JOptionPane.showMessageDialog(null, "Tên đăng nhập hoặc mật khẩu không chính xác.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(null, "Lỗi khi kết nối đến cơ sở dữ liệu: " + e.getMessage());
    }
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void jFogetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jFogetMouseClicked
        // TODO add your handling code here:
        
      Timer timer = new Timer(5, new ActionListener() {
        private int xPosition = jPanel1.getLocation().x;
        private int halfScreen = getWidth() / 2;

        @Override
        public void actionPerformed(ActionEvent e) {
            // Di chuyển jPanel1 sang phải
            xPosition += 15;
            jPanel1.setLocation(xPosition, jPanel1.getLocation().y);

            // Kiểm tra nếu jPanel1 đã đạt một nửa chiều rộng của màn hình
            if (xPosition >= halfScreen) {
                // Dừng timer và ẩn jPanel1
                ((Timer) e.getSource()).stop();
                jPanel1.setVisible(false);
                
                FogotPassword gd= new FogotPassword();
                add(gd);
            }
        }
    });
    timer.start();
        
    }//GEN-LAST:event_jFogetMouseClicked

    /**
     * @param args the command line arguments
     */
    public void updateTrangThai(String trangThai, String user) throws SQLException {
    Connection con = null;
    PreparedStatement pstmt = null;

    try {
        // Kết nối đến cơ sở dữ liệu
        con = ConnectDB.getInstance().getConnection();

        // Chuẩn bị câu lệnh SQL để cập nhật trạng thái
        String query = "UPDATE TaiKhoan SET trangThai = ? WHERE maNhanVien = (SELECT maNhanVien FROM NhanVien WHERE soDienThoai = ?)";
        pstmt = con.prepareStatement(query);
        pstmt.setString(1, trangThai); // Cập nhật trạng thái
        pstmt.setString(2, user);       // Tên đăng nhập

        // Thực thi câu lệnh cập nhật
        int rowsUpdated = pstmt.executeUpdate();
        
        // Kiểm tra nếu có dòng nào được cập nhật
        if (rowsUpdated > 0) {
            System.out.println("Trạng thái tài khoản đã được cập nhật thành công.");
        } else {
            System.out.println("Không tìm thấy tài khoản để cập nhật trạng thái.");
        }
    } catch (SQLException e) {
        e.printStackTrace();
        throw new SQLException("Lỗi khi cập nhật trạng thái tài khoản: " + e.getMessage());
    } finally {
        // Đóng kết nối và các tài nguyên
        if (pstmt != null) {
            pstmt.close();
        }
        if (con != null) {
            con.close();
        }
    }
}
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhap_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhap_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhap_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhap_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DangNhap_GUI().setVisible(true);
            }
        });
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JCheckBox checkRemember;
    private javax.swing.JLabel jFoget;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtTenDangNhap;
    // End of variables declaration//GEN-END:variables
}
